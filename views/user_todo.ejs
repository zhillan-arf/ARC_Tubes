<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie=edge">
        <title>To Do List</title>
        <link rel="icon" href="/images/tdl.png">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
        <style>
            * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: sans-serif;
            } 

            body {
            height: 100%;
            background-color: #FEE3EC;
            }

            .container {
                flex: 1 1 0%;
                width: 100%;
                margin: 0 auto;
            }

            .search-form {
                padding-top: 15px;
                padding-bottom : 15px;
                margin-left: 15px;
            }

            .search-form input {
                padding-left: 7px;
                padding-right: 3px;
                padding-top: 3px;
                padding-bottom: 3px;
                border: none;
                border-radius: 10px;
                background-color: #eee;
                color: grey;
            }

            button {
                padding-left: 6px;
                padding-right: 6px;
                border: none;
                background: none;
                color: gray;
            }

            button:hover {
                color: black;
            }

            .search-input, .sort-select, .add-nama-tugas, .edit-nama-tugas {
                width : 30vw;
            }

            .sort-form {
                padding-bottom: 15px;
                margin-left: 15px;
            }

            .sort-form select {
                background-color: #eee;
                border: none;
                color: gray;
                padding-left: 3px;
                padding-top: 3px;
                padding-bottom: 3px;
                border-radius: 10px;
            }

            .add-form {
                width: 100%;
                display: flex;
                justify-content: space-between;
                padding-bottom: 20px;
                padding-top: 20px;
                padding-left: 6px;
                padding-right: 6px;
            }

            .add-form input, .edit-form input {
                margin-right: 10px;
                margin-left: 6px;
                padding-left: 7px;
                padding-right: 3px;
                border: none;
                background-color: #ddd;
                color: gray;
                border-radius: 10px;
            }

            .to-do-nama-tugas {
                margin-right: 10px;
                margin-left: 6px;
                padding-left: 3px;
                padding-right: 3px;
                color: gray;
                font-weight: 600;
            }

            .to-do-nama-matkul, .to-do-due-date {
                margin-right: 10px;
                margin-left: 6px;
                padding-left: 3px;
                padding-right: 3px;
                color: gray;
            }

            .add-nama-matkul, .edit-nama-matkul {
                width: 15vw;
            }


            .add-submit, .to-do-edit-button, .edit-submit {
                margin-left: auto;
            }

            .to-do-list {
                list-style: none;
            }

            .to-do-list li, .search-sort-bar, .addbar {
                background-color: white;
                margin-top: 10px;
                margin-bottom: 10px;
                border-radius: 15px;
                box-shadow: 3px 3px 6px #fcb2cb;
            }

            .to-do-div, .edit-form {
                display: flex;
                justify-content: space-between;
            }

            .to-do-div p {
                padding-right: 10px;
            }


            /* footer */
            .site-footer
            {
            background-color:#26272b;
            padding:45px 0 20px;
            font-size:15px;
            line-height:24px;
            color:#737373;
            }
            .site-footer hr
            {
            border-top-color:#bbb;
            opacity:0.5
            }
            .site-footer hr.small
            {
            margin:20px 0
            }
            .site-footer h6
            {
            color:#fff;
            font-size:16px;
            text-transform:uppercase;
            margin-top:5px;
            letter-spacing:2px
            }
            .site-footer a
            {
            color:#737373;
            }
            .site-footer a:hover
            {
            color:#3366cc;
            text-decoration:none;
            }
            .footer-links
            {
            padding-left:0;
            list-style:none
            }
            .footer-links li
            {
            display:block
            }
            .footer-links a
            {
            color:#737373
            }
            .footer-links a:active,.footer-links a:focus,.footer-links a:hover
            {
            color:#3366cc;
            text-decoration:none;
            }
            .footer-links.inline li
            {
            display:inline-block
            }
            .site-footer .social-icons
            {
            text-align:right
            }
            .site-footer .social-icons a
            {
            width:40px;
            height:40px;
            line-height:40px;
            margin-left:6px;
            margin-right:0;
            border-radius:100%;
            background-color:#33353d
            }
            .copyright-text
            {
            margin:0
            }
            @media (max-width:991px)
            {
            .site-footer [class^=col-]
            {
                margin-bottom:30px
            }
            }
            @media (max-width:767px)
            {
            .site-footer
            {
                padding-bottom:0
            }
            .site-footer .copyright-text,.site-footer .social-icons
            {
                text-align:center
            }
            }
            .social-icons
            {
            padding-left:0;
            margin-bottom:0;
            list-style:none
            }
            .social-icons li
            {
            display:inline-block;
            margin-bottom:4px
            }
            .social-icons li.title
            {
            margin-right:15px;
            text-transform:uppercase;
            color:#96a2b2;
            font-weight:700;
            font-size:13px
            }
            .social-icons a{
            background-color:#eceeef;
            color:#818a91;
            font-size:16px;
            display:inline-block;
            line-height:44px;
            width:44px;
            height:44px;
            text-align:center;
            margin-right:8px;
            border-radius:100%;
            -webkit-transition:all .2s linear;
            -o-transition:all .2s linear;
            transition:all .2s linear
            }
            .social-icons a:active,.social-icons a:focus,.social-icons a:hover
            {
            color:#fff;
            background-color:#29aafe
            }
            .social-icons.size-sm a
            {
            line-height:34px;
            height:34px;
            width:34px;
            font-size:14px
            }
            .social-icons a.facebook:hover
            {
            background-color:#3b5998
            }
            .social-icons a.twitter:hover
            {
            background-color:#00aced
            }
            .social-icons a.linkedin:hover
            {
            background-color:#007bb6
            }
            .social-icons a.dribbble:hover
            {
            background-color:#ea4c89
            }
            @media (max-width:767px)
            {
            .social-icons li.title
            {
                display:block;
                margin-right:0;
                font-weight:600
            }
            }

        </style>
    </head>
    <body>
        <!-- Navbar -->
        <nav class="navbar navbar-expand-lg navbar-light bg-light shadow p-3 mb-5 bg-body rounded sticky-top">
            <div class="container-fluid">
              <a class="navbar-brand" href="#" style = "font-size: 25px ; color: #F2789F; padding-left: 2vw;">To Do List</a>
              <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
              </button>
              <div class="collapse navbar-collapse" id="navbarNav" style="padding-right: 2vw;">
                <ul class="navbar-nav ms-auto">
                  <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="#">Home</a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" href="/user_login">Login</a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" href="/user_register">Register</a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" href="/#aboutus">About Us</a>
                  </li>
                </ul>
              </div>
            </div>
          </nav>

        <!-- Container -->
        <div class="container">
            <h4>Manage tasks</h3>
            <div class="search-sort-bar">
                <form class="search-form" autocomplete="on">
                    <input type="text" class="search-input" placeholder="Search Tugas atau Mata Kuliah">
                    <button type="submit" class="search-submit">Enter</button>
                    <button type="reset" class="search-reset">Clear</button>
                </form>
                <form class="sort-form">
                    <select class="sort-select" id="sort-select">
                        <option value="">Sort by</option>
                        <option value="nama_tugas_asc">Nama Tugas (Ascending)</option>
                        <option value="nama_tugas_desc">Nama Tugas (Descending)</option>
                        <option value="nama_matkul_asc">Nama Mata Kuliah (Ascending)</option>
                        <option value="nama_matkul_desc">Nama Mata Kuliah (Descending)</option>
                        <option value="due_date_asc">Due Date (Ascending)</option>
                        <option value="due_date_desc">Due Date (Descending)</option>
                    </select>
                    <button type="submit" class="sort-submit">Enter</button>
                    <button type="reset" class="sort-reset">Clear</button>
                </form>
            </div>
            <h4>New task</h4>
            <div class="addbar">
                <form class="add-form">
                    <input type="text" class="add-nama-tugas" placeholder="Nama Tugas" required>
                    <input type="text" class="add-nama-matkul" placeholder="Mata Kuliah" required>
                    <input type="date" class="add-due-date" required>
                    <input type="time" class="add-due-time" required>
                    <button type="submit" class="add-submit">Add</button>
                    <button type="reset" class="add-reset">Cancel</button>
                </form>
            </div>
            <h4>Current tasks</h3>
            <div class="table">
                <ul class="to-do-list">
                <!-- Isi 1 buah to-do
                    <li id="A1">
                        <div class=to-do-div>
                            <p class="to-do-nama-tugas">Tugas 1 Menyalakan LED</p>
                            <p class="to-do-nama-matkul">II2260</p>
                            <p class="to-do-due-date">Sat Feb 12 2022 01:05:00 GMT+0700 (Western Indonesia Time)</p>
                            <button class="to-do-edit-button">Edit</button>
                            <button class="to-do-delete-button">Delete</button>
                        </div>
                    </li>
                -->
                </ul>
            </div>
        </div>

        <br><br><br><br><br><br><br>

        <!-- Site footer -->
        <footer class="site-footer" id="aboutus">
            <div class="container">
            <div class="row">
                <div class="col-sm-12 col-md-6">
                <h6>About</h6>
                <p class="text-justify">From the moment 
                    I understood the weakness of my flesh, 
                    it disgusted me. I craved the strength 
                    and certainty of steel. I aspired to the 
                    purity of the blessed machine. Your kind cling 
                    to your flesh as if it will not decay and fail 
                    you. One day the crude biomass you call a temple 
                    will wither and you will beg my kind to save you.
                    But I am already saved. For the Machine is Immortal.</p>
                </div>
    
    
                <div class="col-xs-6 col-md-3">
                <h6>us</h6>
                <ul class="footer-links">
                    <li><a href="https://github.com/rayhankinan" target="_blank">13520065 kin</a></li>
                    <li><a href="https://github.com/ZakyHermawan" target="_blank">13220022 buzzword</a></li>
                    <li><a href="https://github.com/jundanha" target="_blank">13520155 junn</a></li>
                    <li><a href="https://github.com/slehmadi" target="_blank">18120039 slehmadi</a></li>
                    <li><a href="https://github.com/zhillan-arf" target="_blank">18220008 dialah_zhillanku</a></li>
                    <li><a href="https://github.com/nad-if" target="_blank">18120036 Zeave</a></li>
                </ul>
                </div>
            </div>
            <hr>
            </div>
            <div class="container">
            <div class="row">
                <div class="col-md-8 col-sm-6 col-xs-12">
                <p class="copyright-text">Copyright &copy; 2022 All Rights Reserved by 
            Kelompok 1 ARC.
                </p>
                </div>
    
                <div class="col-md-4 col-sm-6 col-xs-12">
                
                </div>
            </div>
            </div>
    </footer>

        <script>
            class Query {
                constructor(sentence) {
                    this.sentence = sentence
                }

                getSentence() {
                    return this.sentence
                }

                getTermFrequency() {
                    let wordVector = {}
                    this.getSentence().split(" ").forEach((word) => {
                        if (!(Object.keys(wordVector).includes(word))) {
                            wordVector[word] = 1
                        } else {
                            wordVector[word]++
                        }
                    })
                    return wordVector
                }

                getLength() {
                    let result = 0
                    Object.values(this.getTermFrequency()).forEach((freq) => {
                        result += freq * freq
                    })
                    return Math.sqrt(result)
                }
            }

            class Document {
                constructor(paragraph) {
                    this.paragraph = paragraph
                }

                getParagraph() {
                    return this.paragraph
                }

                getTermFrequency() {
                    let wordVector = {}
                    this.getParagraph().split(" ").forEach((word) => {
                        if (!(Object.keys(wordVector).includes(word))) {
                            wordVector[word] = 1
                        } else {
                            wordVector[word]++
                        }
                    })
                    return wordVector
                }

                getLength() {
                    let result = 0
                    Object.values(this.getTermFrequency()).forEach((freq) => {
                        result += freq * freq
                    })
                    return Math.sqrt(result)
                }

                getSearchResult(Q) {
                    let wordVector = {}
                    Object.keys(Q.getTermFrequency()).forEach((word) => {
                        wordVector[word] = this.getParagraph().split(word).length - 1
                    })
                    return wordVector
                }
            }

            function sim(Q, D) {
                const vectorQ = Q.getTermFrequency()
                const vectorD = D.getSearchResult(Q)

                let dotProduct = 0

                for (const word in vectorQ) {
                    dotProduct += vectorQ[word] * vectorD[word]
                }
                return (dotProduct) / (Q.getLength() * D.getLength())
            }

        </script>

        <script>

            function getCookie(name) {
                const value = `; ${document.cookie}`;
                const parts = value.split(`; ${name}=`);
                if (parts.length === 2) return parts.pop().split(';').shift();
            }

            const fetchData = (func) => {
                const getAll_url = "http://localhost:3000/api/getAll"
                
                fetch(getAll_url, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(data => data.json()).then(data => {func(data.data)})
                .catch(err => alert(err))
            }
    
            const addFormHandler = (event) => {
                event.preventDefault()

                const nama_tugas = document.querySelector('.add-nama-tugas')
                const nama_matkul = document.querySelector('.add-nama-matkul')
                const due_date = document.querySelector('.add-due-date')
                const due_time = document.querySelector('.add-due-time')

                const payload = {
                    nama_tugas: nama_tugas.value,
                    nama_matkul: nama_matkul.value,
                    due_date: due_date.value + ' ' + due_time.value
                }
    
                const target_url = "http://localhost:3000/api/addTodo"
                const header = new Headers({
                    'Content-Type': 'application/json'
                })
    
                fetch(target_url, {
                    method: 'POST',
                    headers: header,
                    body: JSON.stringify(payload)
                })
                .then(data => data.json()).then(() => {clearList();fetchData(displayToDoList)}).catch(err => {alert('fail');alert(err)})

                nama_matkul.value = ''
                nama_tugas.value = ''
                due_date.value = ''
                due_time.value = ''

                const sort_select = document.querySelector('.sort-select')
                sort_select.value = ''
            }

            const editToDo = (event) => {
                event.preventDefault()

                const item = event.target

                if (item.classList[0] === 'to-do-edit-button') {
                    const to_do_element = item.parentElement.parentElement

                    const edit_div = document.createElement('div')
                    edit_div.classList.add('edit-to-do')

                    const edit_form = document.createElement('form')
                    edit_form.classList.add('edit-form')

                    const edit_nama_tugas = document.createElement('input')
                    edit_nama_tugas.classList.add('edit-nama-tugas')
                    edit_nama_tugas.type = 'text'
                    edit_nama_tugas.placeholder = 'Nama Tugas'
                    edit_nama_tugas.value = to_do_element.querySelector('.to-do-nama-tugas').textContent
                    edit_nama_tugas.required = true
                    edit_form.appendChild(edit_nama_tugas)

                    const edit_nama_matkul = document.createElement('input')
                    edit_nama_matkul.classList.add('edit-nama-matkul')
                    edit_nama_matkul.type = 'text'
                    edit_nama_matkul.placeholder = 'Nama Mata Kuliah'
                    edit_nama_matkul.value = to_do_element.querySelector('.to-do-nama-matkul').textContent
                    edit_nama_matkul.required = true
                    edit_form.appendChild(edit_nama_matkul)

                    const datetime = new Date(to_do_element.querySelector('.to-do-due-date').textContent)

                    const edit_due_date = document.createElement('input')
                    edit_due_date.classList.add('edit-due-date')
                    edit_due_date.type = 'date'
                    edit_due_date.value = `${datetime.getFullYear().toString().padStart(4, '0')}-${(datetime.getMonth() + 1).toString().padStart(2, '0')}-${datetime.getDate().toString().padStart(2, '0')}`
                    edit_due_date.required = true
                    edit_form.appendChild(edit_due_date)

                    const edit_due_time = document.createElement('input')
                    edit_due_time.classList.add('edit-due-time')
                    edit_due_time.type = 'time'
                    edit_due_time.value = `${datetime.getHours().toString().padStart(2, '0')}:${datetime.getMinutes().toString().padStart(2, '0')}`
                    edit_due_time.required = true
                    edit_form.appendChild(edit_due_time)

                    const submit_button = document.createElement('button')
                    submit_button.classList.add('edit-submit')
                    submit_button.type = 'submit'
                    submit_button.textContent = 'Done'
                    edit_form.appendChild(submit_button)

                    const reset_button = document.createElement('button')
                    reset_button.classList.add('edit-reset')
                    reset_button.type = 'reset'
                    reset_button.textContent = 'Clear'
                    edit_form.appendChild(reset_button)

                    edit_div.appendChild(edit_form)

                    to_do_element.removeChild(to_do_element.childNodes[0])
                    to_do_element.appendChild(edit_div)
                }
            }

            const editFormHandler = (event) => {
                event.preventDefault()

                const item = event.target

                if (item.classList[0] === 'edit-submit' && document.querySelector('.edit-nama-tugas').value !== '' && document.querySelector('.edit-nama-matkul').value !== '' && document.querySelector('.edit-due-date').value !== '' && document.querySelector('.edit-due-time').value !== '') {
                    const to_do_element = item.parentElement.parentElement.parentElement // edit-submit berada dalam form

                    const id = parseInt(to_do_element.id)
                    const nama_tugas = document.querySelector('.edit-nama-tugas')
                    const nama_matkul = document.querySelector('.edit-nama-matkul')
                    const due_date = document.querySelector('.edit-due-date')
                    const due_time = document.querySelector('.edit-due-time')

                    const payload = {
                        id: id,
                        nama_tugas: nama_tugas.value,
                        nama_matkul: nama_matkul.value,
                        due_date: due_date.value + ' ' + due_time.value
                    }

                    const target_url = "http://localhost:3000/api/update"
                    const header = new Headers({
                        'Content-Type': 'application/json'
                    })

                    fetch(target_url, {
                        method: 'PUT',
                        headers: header,
                        body: JSON.stringify(payload)
                    })
                    .then(data => data.json()).catch(err => {alert('fail');alert(err)})

                    const to_do_div = document.createElement('div')
                    to_do_div.classList.add('to-do-div')

                    const to_do_nama_tugas = document.createElement('p')
                    to_do_nama_tugas.classList.add('to-do-nama-tugas')
                    to_do_nama_tugas.textContent = payload.nama_tugas
                    to_do_div.appendChild(to_do_nama_tugas)

                    const to_do_nama_matkul = document.createElement('p')
                    to_do_nama_matkul.classList.add('to-do-nama-matkul')
                    to_do_nama_matkul.textContent = payload.nama_matkul
                    to_do_div.appendChild(to_do_nama_matkul)

                    const to_do_due_date = document.createElement('p')
                    to_do_due_date.classList.add('to-do-due-date')
                    const datetime = new Date(payload.due_date) // String datetime tidak mengikuti ISO
                    to_do_due_date.textContent = datetime.toString()
                    to_do_div.appendChild(to_do_due_date)

                    const to_do_edit_button = document.createElement('button')
                    to_do_edit_button.classList.add('to-do-edit-button')
                    to_do_edit_button.textContent = 'Edit'
                    to_do_div.appendChild(to_do_edit_button)

                    const to_do_delete_button = document.createElement('button')
                    to_do_delete_button.classList.add('to-do-delete-button')
                    to_do_delete_button.textContent = 'Delete'
                    to_do_div.appendChild(to_do_delete_button)

                    to_do_element.removeChild(to_do_element.childNodes[0])
                    to_do_element.appendChild(to_do_div)
                }
            }

            const editFormClear = (event) => {
                event.preventDefault()

                const item = event.target

                if (item.classList[0] === 'edit-reset') {
                    document.querySelector('.edit-nama-tugas').value = ''
                    document.querySelector('.edit-nama-matkul').value = ''
                    document.querySelector('.edit-due-date').value = ''
                    document.querySelector('.edit-due-time').value = ''
                }
            }

            const deleteFormHandler = (event) => {
                event.preventDefault()

                const item = event.target

                if (item.classList[0] === 'to-do-delete-button') {
                    const to_do_element = item.parentElement.parentElement

                    const id = parseInt(to_do_element.id)

                    const payload = {
                        id: id
                    }

                    const target_url = "http://localhost:3000/api/delete"
                    const header = new Headers({
                        'Content-Type': 'application/json'
                    })

                    fetch(target_url, {
                        method: 'DELETE',
                        headers: header,
                        body: JSON.stringify(payload)
                    })
                    .then(data => data.json()).catch(err => {alert('fail');alert(err)})

                    to_do_element.remove()
                }
            }

            const displayToDoList = (current_data) => {
                const to_do_list = document.querySelector('.to-do-list')

                current_data.forEach((to_do) => {
                    displayData(to_do)
                })
            }

            const displayData = (to_do) => {
                const to_do_list = document.querySelector('.to-do-list')

                const to_do_element = document.createElement('li')
                to_do_element.id = to_do.id

                const to_do_div = document.createElement('div')
                to_do_div.classList.add('to-do-div')

                const to_do_nama_tugas = document.createElement('p')
                to_do_nama_tugas.classList.add('to-do-nama-tugas')
                to_do_nama_tugas.textContent = to_do.nama_tugas
                to_do_div.appendChild(to_do_nama_tugas)

                const to_do_nama_matkul = document.createElement('p')
                to_do_nama_matkul.classList.add('to-do-nama-matkul')
                to_do_nama_matkul.textContent = to_do.nama_matkul
                to_do_div.appendChild(to_do_nama_matkul)

                const to_do_due_date = document.createElement('p')
                to_do_due_date.classList.add('to-do-due-date')
                const datetime = new Date(to_do.due_date.replace("T", " ").replace(".000Z", "")) // String datetime mungkin mengikuti ISO
                to_do_due_date.textContent = datetime.toString()
                to_do_div.appendChild(to_do_due_date)

                const to_do_edit_button = document.createElement('button')
                to_do_edit_button.classList.add('to-do-edit-button')
                to_do_edit_button.textContent = 'Edit'
                to_do_div.appendChild(to_do_edit_button)

                const to_do_delete_button = document.createElement('button')
                to_do_delete_button.classList.add('to-do-delete-button')
                to_do_delete_button.textContent = 'Delete'
                to_do_div.appendChild(to_do_delete_button)

                to_do_element.appendChild(to_do_div)

                to_do_list.appendChild(to_do_element)
            }

            const clearList = () => {
                const to_do_list = document.querySelector('.to-do-list')

                while (to_do_list.firstChild) {
                    to_do_list.firstChild.remove()
                }
            }

            const sortFormHandler = (event) => {
                event.preventDefault()

                const sort_select = document.querySelector('.sort-select')

                switch (sort_select.value) {
                    case 'nama_tugas_asc':
                        clearList()
                        fetchData((current_data) => {
                            current_data.sort((to_do_1, to_do_2) => {
                                return to_do_1.nama_tugas.localeCompare(to_do_2.nama_tugas)
                            })
                            displayToDoList(current_data)
                        })
                        break

                    case 'nama_tugas_desc':
                        clearList()
                        fetchData((current_data) => {
                            current_data.sort((to_do_1, to_do_2) => {
                                return to_do_2.nama_tugas.localeCompare(to_do_1.nama_tugas)
                            })
                            displayToDoList(current_data)
                        })
                        break

                    case 'nama_matkul_asc':
                        clearList()
                        fetchData((current_data) => {
                            current_data.sort((to_do_1, to_do_2) => {
                                return to_do_1.nama_matkul.localeCompare(to_do_2.nama_matkul)
                            })
                            displayToDoList(current_data)
                        })
                        break

                    case 'nama_matkul_desc':
                        clearList()
                        fetchData((current_data) => {
                            current_data.sort((to_do_1, to_do_2) => {
                                return to_do_2.nama_matkul.localeCompare(to_do_1.nama_matkul)
                            })
                            displayToDoList(current_data)
                        })
                        break

                    case 'due_date_asc':
                        clearList()
                        fetchData((current_data) => {
                            current_data.sort((to_do_1, to_do_2) => {
                                const datetime_1 = new Date(to_do_1.due_date.replace("T", " ").replace(".000Z", "")) // String datetime mungkin mengikuti ISO
                                const datetime_2 = new Date(to_do_2.due_date.replace("T", " ").replace(".000Z", "")) // String datetime mungkin mengikuti ISO

                                return datetime_1.getTime() - datetime_2.getTime()
                            })
                            displayToDoList(current_data)
                        })
                        break

                    case 'due_date_desc':
                        clearList()
                        fetchData((current_data) => {
                            current_data.sort((to_do_1, to_do_2) => {
                                const datetime_1 = new Date(to_do_1.due_date.replace("T", " ").replace(".000Z", "")) // String datetime mungkin mengikuti ISO
                                const datetime_2 = new Date(to_do_2.due_date.replace("T", " ").replace(".000Z", "")) // String datetime mungkin mengikuti ISO

                                return datetime_2.getTime() - datetime_1.getTime()
                            })
                            displayToDoList(current_data)
                        })
                        break

                    default:
                        clearList()
                        fetchData(displayToDoList)
                        break
                }
            }

            const sortFormClear = (event) => {
                event.preventDefault()

                clearList()
                fetchData(displayToDoList)

                const sort_select = document.querySelector('.sort-select')
                sort_select.value = ''
            }

            const searchFormHandler = (event) => {
                event.preventDefault()

                const search_input = document.querySelector('.search-input')

                if (search_input.value !== '') {
                    clearList()
                    fetchData((current_data) => {
                        const Q = new Query(search_input.value)

                        current_data.sort((to_do_1, to_do_2) => {
                            const D1 = new Document(`${to_do_1.nama_tugas} ${to_do_1.nama_matkul}`)
                            const D2 = new Document(`${to_do_2.nama_tugas} ${to_do_2.nama_matkul}`)

                            return sim(Q, D2) - sim(Q, D1)
                        })

                        current_data = current_data.filter((to_do) => {const D = new Document(`${to_do.nama_tugas} ${to_do.nama_matkul}`);return sim(Q, D) > 0})

                        displayToDoList(current_data)
                    })
                }
            }

            const searchFormClear = (event) => {
                event.preventDefault()

                clearList()
                fetchData(displayToDoList)

                const search_input = document.querySelector('.search-input')
                search_input.value = ''
            }

            const add_form = document.querySelector('.add-form')
            const to_do_list = document.querySelector('.to-do-list')
            const sort_form = document.querySelector('.sort-form')
            const search_form = document.querySelector('.search-form')

            add_form.addEventListener('submit', addFormHandler)
            to_do_list.addEventListener('click', editToDo)
            to_do_list.addEventListener('click', editFormHandler)
            to_do_list.addEventListener('click', editFormClear)
            to_do_list.addEventListener('click', deleteFormHandler)
            sort_form.addEventListener('submit', sortFormHandler)
            sort_form.addEventListener('reset', sortFormClear)
            search_form.addEventListener('submit', searchFormHandler)
            search_form.addEventListener('reset', searchFormClear)

            fetchData(displayToDoList)

        </script>
    </body>
</html>